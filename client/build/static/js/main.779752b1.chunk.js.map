{"version":3,"sources":["components/Form/styles.js","api/index.js","constants/actionTypes.js","actions/posts.js","components/Form/Form.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["makeStyles","paper","padding","backgroundColor","marginTop","mbSmall","marginBottom","buttons","display","justifyContent","axios","require","url","updatePost","id","updatedPost","patch","deletePost","delete","likePost","FETCH_POSTS","CREATE_POSTS","UPDATE_POST","DELETE","LIKE_POST","getPosts","dispatch","a","get","data","type","payload","console","log","Form","classes","useStyles","useDispatch","currentId","useSelector","state","post","posts","find","p","_id","useState","creator","title","message","tags","selectedFile","postData","setPostData","useEffect","clearform","Paper","className","elevation","onSubmit","e","preventDefault","api","newPost","createPost","Typography","variant","align","TextField","label","size","fullWidth","value","onChange","target","multiple","onDone","base64","Button","color","onClick","creationInfo","position","top","left","cardMedia","height","paddingTop","cardContainer","margin","borderRadius","verDotIconDIV","right","verDotIcon","cardButtons","BtnLike","BtnDelete","ButtonLikeOption","marginRight","ButtonDeleteOption","cardTitle","marginLeft","cardTags","Post","Card","CardMedia","image","moment","createdAt","fromNow","CardContent","CardActions","likeCount","gridContainer","Posts","length","Grid","container","alignItems","map","item","xs","sm","md","CircularProgress","appBar","flexDirection","border","headerTitle","grid","App","clasess","Container","AppBar","src","alt","width","justify","spacing","lg","combineReducers","action","filter","store","createStore","root","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.779752b1.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => ({\r\n  paper: {\r\n    padding: \"1rem\",\r\n    backgroundColor: \"#ffd1d1\",\r\n    marginTop: \"11px\",\r\n  },\r\n\r\n  mbSmall: {\r\n    marginBottom: \"1rem\",\r\n  },\r\n\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n","const axios = require(\"axios\");\r\n\r\nconst url = \"https://react--memories.herokuapp.com/posts\";\r\n\r\nexport const fetchPosts = () => {\r\n  return axios.get(url);\r\n};\r\n\r\nexport const createPost = (newPost) => {\r\n  return axios.post(url, newPost);\r\n};\r\n\r\nexport const updatePost = (id, updatedPost) => {\r\n  return axios.patch(`${url}/${id}`, updatedPost);\r\n};\r\n\r\nexport const deletePost = (id) => {\r\n  return axios.delete(`${url}/${id}`);\r\n};\r\n\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\r\n","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const CREATE_POSTS = \"CREATE_POSTS\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE = \"DELETE\";\r\nexport const LIKE_POST = \"LIKE_POST\";\r\nexport const SET_ID = \"SET_ID\";\r\n","import * as api from \"../api/index\";\r\nimport {\r\n  FETCH_POSTS,\r\n  CREATE_POSTS,\r\n  UPDATE_POST,\r\n  DELETE,\r\n  LIKE_POST,\r\n  SET_ID,\r\n} from \"../constants/actionTypes\";\r\n// Actio Creators\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({\r\n      type: FETCH_POSTS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({ type: CREATE_POSTS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const currentID = (id) => {\r\n  return {\r\n    type: SET_ID,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({ type: UPDATE_POST, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n    dispatch({ type: LIKE_POST, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n//material-ui\r\nimport { Paper, TextField, Typography, Button } from \"@material-ui/core\";\r\n// FileBase\r\nimport FileBase from \"react-file-base64\";\r\n//import makeStyles\r\nimport useStyles from \"./styles\";\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n//import posts  function\r\nimport { getPosts } from \"../../actions/posts\";\r\n\r\nfunction Form() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const currentId = useSelector((state) => state.currentId.id);\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((p) => p._id === currentId) : null\r\n  );\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n    // return () => {};\r\n  }, [post]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {\r\n      dispatch(createPost(postData));\r\n    }\r\n    dispatch(getPosts());\r\n    clearform();\r\n  };\r\n\r\n  const clearform = () => {\r\n    dispatch({ type: \"SET_ID\", payload: null });\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          {currentId ? \"Editing\" : \"Creating\"} a Memory\r\n        </Typography>\r\n        <TextField\r\n          className={classes.mbSmall}\r\n          label=\"Creator\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        ></TextField>\r\n        <TextField\r\n          className={classes.mbSmall}\r\n          label=\"title\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        ></TextField>\r\n        <TextField\r\n          className={classes.mbSmall}\r\n          label=\"message\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        ></TextField>\r\n        <TextField\r\n          className={classes.mbSmall}\r\n          label=\"tags\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\r\n        ></TextField>\r\n        <div className={classes.mbSmall}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <div className={classes.buttons}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            onClick={clearform}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n  creationInfo: {\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    left: \"15px\",\r\n    color: \"white\",\r\n  },\r\n  cardMedia: {\r\n    height: 0,\r\n    paddingTop: \"56%\",\r\n  },\r\n\r\n  cardContainer: {\r\n    position: \"relative\",\r\n    margin: \"10px 10px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  verDotIconDIV: {\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"-12px\",\r\n  },\r\n  verDotIcon: {\r\n    color: \"white\",\r\n  },\r\n  cardButtons: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  BtnLike: {\r\n    color: \"#7383bb\",\r\n  },\r\n  BtnDelete: {\r\n    color: \"#ff8e8e\",\r\n  },\r\n  ButtonLikeOption: {\r\n    color: \"#7383bb\",\r\n    marginRight: \"4px\",\r\n  },\r\n  ButtonDeleteOption: {\r\n    color: \"#ff8e8e\",\r\n  },\r\n  cardTitle: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  cardTags: {\r\n    margin: \"5px 0px\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\n//material-ui\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport moment from \"moment\";\r\nimport useStyles from \"./styles\";\r\n//Icons\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\n//useDispatch\r\nimport { useDispatch } from \"react-redux\";\r\n//import action\r\nimport { currentID, deletePost, likePost } from \"../../../actions/posts\";\r\n//import posts  function\r\nimport { getPosts } from \"../../../actions/posts\";\r\n\r\nfunction Post({ post }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const EditHandler = (e) => {\r\n    dispatch(currentID(post._id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.cardContainer}>\r\n        <CardMedia\r\n          image={post.selectedFile}\r\n          title={post.title}\r\n          className={classes.cardMedia}\r\n        />\r\n        <div className={classes.creationInfo}>\r\n          <Typography variant=\"body1\">{post.creator}</Typography>\r\n          <Typography variant=\"body2\">\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.verDotIconDIV}>\r\n          <Button size=\"small\" onClick={EditHandler}>\r\n            <MoreVertIcon className={classes.verDotIcon} />\r\n          </Button>\r\n        </div>\r\n        <Typography\r\n          className={classes.cardTags}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          align=\"center\"\r\n        >\r\n          {post.tags}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.cardTitle}>\r\n          {post.title}\r\n        </Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {post.message}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.cardButtons}>\r\n          <Button\r\n            className={classes.BtnLike}\r\n            onClick={() => {\r\n              dispatch(likePost(post._id));\r\n              dispatch(getPosts());\r\n            }}\r\n          >\r\n            <ThumbUpAltOutlinedIcon className={classes.ButtonLikeOption} />\r\n            &nbsp; LIKE &nbsp;\r\n            {post.likeCount}\r\n          </Button>\r\n          <Button\r\n            className={classes.BtnDelete}\r\n            onClick={() => dispatch(deletePost(post._id))}\r\n          >\r\n            <DeleteOutlineOutlinedIcon className={classes.ButtonDeleteOption} />\r\n            &nbsp; DELETE &nbsp;\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => ({\r\n  gridContainer: {\r\n    // backgroundColor: \"gray\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\n//useSelector\r\nimport { useSelector } from \"react-redux\";\r\n//material-ui\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\n//makeStyle\r\nimport useStyles from \"./styles\";\r\n\r\nfunction Posts() {\r\n  const posts = useSelector((state) => state.posts);\r\n  console.log(posts);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {!posts.length ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container className={classes.gridContainer} alignItems=\"stretch\">\r\n          {posts.map((post) => (\r\n            <Grid item key={post._id} xs={12} sm={6} md={6}>\r\n              <Post post={post} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => {\r\n  return {\r\n    appBar: {\r\n      borderRadius: \"30px\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      padding: \"0.1rem\",\r\n      marginTop: \"2%\",\r\n      border: \"2px solid #b8bfbd\",\r\n    },\r\n\r\n    headerTitle: {\r\n      color: \"#24a2ec\",\r\n      marginRight: \"2%\",\r\n    },\r\n\r\n    grid: {\r\n      marginTop: \"10px\",\r\n    },\r\n  };\r\n});\r\n","import \"./App.css\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport { AppBar } from \"@material-ui/core\";\nimport Form from \"./components/Form/Form\";\nimport Posts from \"./components/Posts/Posts\";\n//MakeStyle\nimport useStyles from \"./styles\";\n//UseDispatch react-redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n// Actions\nimport { getPosts } from \"./actions/posts\";\nfunction App() {\n  const dispatch = useDispatch();\n  const clasess = useStyles();\n  const currentId = useSelector((state) => state.currentId);\n\n  const memoriesImg =\n    \"https://git.nkelemen.hu/uploads/-/system/project/avatar/72/memories.png\";\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n  return (\n    <Container>\n      {/* Header*/}\n      <AppBar className={clasess.appBar} color=\"inherit\" position=\"static\">\n        <Typography className={clasess.headerTitle} align=\"center\" variant=\"h3\">\n          Memories\n        </Typography>\n        <img src={memoriesImg} alt=\"memories\" height=\"60\" width=\"60\" />\n      </AppBar>\n\n      {/* Body */}\n      <Container>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n          spacing={3}\n          className={clasess.grid}\n        >\n          {/* posts */}\n          <Grid item xs={12} sm={12} md={8} lg={12}>\n            <Posts />\n          </Grid>\n          {/* form */}\n          <Grid item xs={12} sm={12} md={4} lg={6}>\n            <Form />\n          </Grid>\n        </Grid>\n      </Container>\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport postsReducer, { currentIDReducer } from \"./posts\";\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  currentId: currentIDReducer,\r\n});\r\n","import {\r\n  FETCH_POSTS,\r\n  CREATE_POSTS,\r\n  UPDATE_POST,\r\n  DELETE,\r\n  LIKE_POST,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case DELETE:\r\n      return state.filter((post) => post._id !== action.payload);\r\n    case FETCH_POSTS:\r\n      return action.payload;\r\n    case CREATE_POSTS:\r\n      return [...state, action.payload];\r\n    case UPDATE_POST:\r\n    case LIKE_POST:\r\n      return state.map((post) => {\r\n        return post._id === action.payload ? action.payload : post;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentIDReducer = (state = { id: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ID\":\r\n      return { ...state, id: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// Redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport root from \"./reducers/index\";\n// Redux thunk\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(root, compose(applyMiddleware(thunk)));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}